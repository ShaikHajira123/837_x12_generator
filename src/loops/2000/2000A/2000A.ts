import { Provider } from "../../../models/request.model";
import { formatObject } from "../../../utils/global";
import { generate2010AA } from "./2010AA";

/**
 * The function `generate2000A` generates a formatted string based on data for a specific provider.
 * @param {Provider} provider - The `provider` parameter in the `generate2000A` function is an object
 * that contains information about a healthcare provider. This information is used to generate a
 * specific segment of data in a standardized format for healthcare transactions.
 * @returns The `generate2000A` function is returning a formatted string that represents data in the
 * `data` array. The data includes a segment with hierarchical information and a loop generated by the
 * `generate2010AA` function. The objects in the `data` array are formatted using the `formatObject`
 * function and joined with a tilde character '~'.
 */

export function generate2000A(provider: Provider) {
    let data = [
        {
            "Segment": "HL",
            "HierarchicalIDNumber": "1",
            "HierarchicalParentIDNumber": "",
            "HierarchicalLevelCode": "20",
            "HierarchicalChildCode": "1"
        },
        {
            "loop2010AA": generate2010AA(provider)
        }
    ]

    // Format each object and join with '~'
    const formattedString = data.map(formatObject).join('~') + '~';
    return formattedString;
}